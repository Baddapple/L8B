<?xml version="1.0" encoding="UTF-8"?>
<actor PGFVersion="0.23" id="id452726" GSCVersion="0.13.44"><attributes><text id="name">Restore</text><real id="time">0</real><point id="position"><real id="x">0</real><real id="y">0</real></point><size id="size"><real id="width">256</real><real id="height">76</real></size><angle id="rotation">0</angle><color id="color"><real id="red">1</real><real id="green">1</real><real id="blue">1</real><real id="alpha">1</real></color><image id="image">Restore</image><text id="tags"></text><boolean id="preloadArt">true</boolean></attributes><behaviors><behavior id="id438316" class="ChangeAttributeAction" enabled="true"><attributes><text id="name">Cam Y Offset</text><text id="bundleName">ChangeAttribute.behavior</text><text id="targetAttribute">self.attributes.position.y</text><text id="RHS"><expression><reference keypath="self.attributes.position.y"/><string xml:space="preserve">+</string><reference keypath="game.attributes.id628667"/></expression></text></attributes></behavior><behavior id="id912793" class="NoteBehavior" enabled="true"><attributes><text id="name">Note</text><text id="bundleName">Note.behavior</text><text id="note">A lot of the explanation in this actor would duplicate that found in the Buy button, as most of what happens here is using the same logic and methods as found there. As such, less explanation will be provided here. 🔚</text></attributes></behavior><behavior id="id267925" class="CompoundBehavior" enabled="true"><attributes><text id="name">Touch is pressed</text><text id="bundleName">Group.behavior</text></attributes><behaviors><behavior id="id821486" class="NoteBehavior" enabled="true"><attributes><text id="name">Note</text><text id="bundleName">Note.behavior</text><text id="note">Just as with the Buy button, we have to ensure that a Buy or a Restore isn’t already in progress and that the item hasn’t already been bought before we allow the user to press the button. 🔚</text></attributes></behavior><behavior enabled="true" id="id928920" class="RuleBehavior"><attributes><text id="name">Touch is pressed</text><text id="bundleName">Rule.behavior</text><real id="compoundConditionKind">0</real></attributes><conditions><condition id="id843405" pluginPredicateTypeIndex="0" eventType="touch"><attributes><index id="conditionType">0</index></attributes><predicate type="touch" conditionType="pressed"><attributes/></predicate></condition><condition id="id236877" eventType="mouse position" pluginPredicateTypeIndex="0"><attributes><index id="conditionType">1</index><text id="subjectAttribute">game.attributes.id388026</text></attributes></condition><condition id="id201561" eventType="mouse position" pluginPredicateTypeIndex="0"><attributes><index id="conditionType">1</index><text id="subjectAttribute">game.attributes.id536048</text></attributes></condition><condition id="id630371" eventType="mouse position" pluginPredicateTypeIndex="0"><attributes><index id="conditionType">1</index><text id="subjectAttribute">game.attributes.id322831</text></attributes></condition></conditions><behaviors><behavior id="id713582" class="ChangeAttributeAction" enabled="true"><attributes><text id="name">Change Attribute</text><text id="bundleName">ChangeAttribute.behavior</text><text id="targetAttribute"></text><text id="RHS">true</text></attributes></behavior><behavior id="id366310" class="ChangeAttributeAction" enabled="true"><attributes><text id="name">Change Attribute</text><text id="bundleName">ChangeAttribute.behavior</text><text id="targetAttribute">self.attributes.image</text><text id="RHS">Restore-Wait</text></attributes></behavior><behavior enabled="true" id="id769455" class="RuleBehavior"><attributes><text id="name">Rule</text><text id="bundleName">Rule.behavior</text><real id="compoundConditionKind">0</real></attributes><conditions><condition id="id386366" eventType="mouse position" pluginPredicateTypeIndex="0"><attributes><index id="conditionType">1</index><text id="subjectAttribute">game.attributes.id450160</text></attributes></condition></conditions><behaviors><behavior id="id488582" class="IAPRequestPurchaseDataAction" enabled="true"><attributes><text id="name">In App Purchase - Request Purchase Data</text><text id="bundleName">IAPRequestPurchaseData.behavior</text><text id="startIndex">1</text><text id="endIndex">-1</text><text id="callbackAttribute"></text></attributes></behavior></behaviors><elseBehaviors/></behavior></behaviors><elseBehaviors/></behavior></behaviors></behavior><behavior id="id981032" class="CompoundBehavior" enabled="true"><attributes><text id="name">Table filled - Successful</text><text id="bundleName">Group.behavior</text></attributes><behaviors><behavior id="id512796" class="NoteBehavior" enabled="true"><attributes><text id="name">Note</text><text id="bundleName">Note.behavior</text><text id="note">Again this logic mirrors that of the Buy button, except for how we handle the failure of a Restore attempt. 🔚</text></attributes></behavior><behavior enabled="true" id="id817635" class="RuleBehavior"><attributes><text id="name">Table filled - Successful</text><text id="bundleName">Rule.behavior</text><real id="compoundConditionKind">0</real></attributes><conditions><condition id="id397846" eventType="mouse position" pluginPredicateTypeIndex="0"><attributes><index id="conditionType">1</index><text id="subjectAttribute">game.attributes.id450160</text></attributes></condition></conditions><behaviors><behavior enabled="true" id="id329931" class="RuleBehavior"><attributes><text id="name">Rule</text><text id="bundleName">Rule.behavior</text><real id="compoundConditionKind">0</real></attributes><conditions><condition id="id838056" eventType="mouse position" pluginPredicateTypeIndex="0"><attributes><index id="conditionType">1</index><text id="subjectAttribute">game.attributes.id536048</text></attributes></condition></conditions><behaviors><behavior id="id615337" class="ChangeAttributeAction" enabled="true"><attributes><text id="name">Change Attribute</text><text id="bundleName">ChangeAttribute.behavior</text><text id="targetAttribute">self.attributes.image</text><text id="RHS">Restore-Wait</text></attributes></behavior><behavior id="id220151" class="NoteBehavior" enabled="true"><attributes><text id="name">Note</text><text id="bundleName">Note.behavior</text><text id="note">When a Restore is being requested, we face a problem that we do not have with the Buy button. When the user is Buying an item, it is only available to purchase if it hasn’t already been bought. Therefore we know when a purchase is successful (the cell in the 5th column of the PurchaseTable changes from “unpurchased” to “pending” and then to “purchased”), and we know when a purchase fails (the cell changes from “unpurchased” to “pending” and then to “unpurchased” again). We don’t get the luxury of this feedback from a Restore attempt.

There are two possible situations a user might be in when they press the Restore button. They may be attempting to restore a purchase that they already had - something they did indeed previously purchase. This is easily handled in the same way as with a Buy. The cell in the 5th column of the PurchaseTable will change from “unpurchased” to “purchased”. However, they may be attempting to restore a purchase that they never previously purchased. When you trigger a Restore, GameSalad does not change the cell to “pending”, like with a Purchase behaviour. This means we have no way of knowing if a Restore fails or if a restore is unsuccessful due to a failed connection to Apple. In both cases, the PurchaseTable will not change. 

@Colander on the GameSalad forums suggested this clever way of fixing one of these issues. If we blank out the relevant cell in the PurchaseTable, a successful Restore attempt will re-fill this cell with either “unpurchased” if the user hasn’t previously bought this item, or “purchased” if they have. We’re already handling when it is changed to “purchased” elsewhere, so we only need to handle “unpurchased” here. Unfortunately, this doesn’t really help with a failure to connect to Apple, still, so we have to handle that elsewhere too. 🔚</text></attributes></behavior><behavior class="ChangeTableValueAction" enabled="true"><attributes><text id="name">Change Table Value</text><text id="bundleName">ChangeTableValue.behavior</text><text id="tableID"></text><text id="tableExpression"></text><text id="rowNumber">1</text><array id="assignments"><tablecolumnassignment id="id866878"><text id="column">5</text><text id="rhsvalue"></text></tablecolumnassignment></array></attributes></behavior><behavior id="id562975" class="NoteBehavior" enabled="true"><attributes><text id="name">Note</text><text id="bundleName">Note.behavior</text><text id="note">Here we trigger the actual Restore attempt. 🔚</text></attributes></behavior><behavior id="id417269" class="IAPRestoreItemsAction" enabled="true"><attributes><text id="name">In App Purchase - Restore Items</text><text id="bundleName">IAPRestoreItems.behavior</text></attributes></behavior><behavior id="id628621" class="NoteBehavior" enabled="true"><attributes><text id="name">Note</text><text id="bundleName">Note.behavior</text><text id="note">We’re making a table change, so I’ve included a timer here just to be safe. Similarly to a situation discussed in the Buy button, this might not be necessary. Whereas there the timer was left out in the Buy button, it’s been included here. I don’t remember at this point if I tested it without and it didn’t work, or if I was just feeling more paranoid when I did this bit of logic, but I’m leaving it in now. Experiment if you wish! 🔚</text></attributes></behavior><behavior id="id592656" class="TimerBehavior" enabled="true"><attributes><text id="name">Give the table time to change</text><text id="bundleName">Timer.behavior</text><index id="timerType">1</index><real id="interval">0.1</real><boolean id="runToCompletion">false</boolean></attributes><behaviors><behavior id="id707843" class="NoteBehavior" enabled="true"><attributes><text id="name">Note</text><text id="bundleName">Note.behavior</text><text id="note">Since we blanked out the cell in the 5th column of the PurchaseTable, we know that as soon as it’s changed to “unpurchased” that is because the restore has been successfully completed and the item has not previously been purchased. As such, we can change “game.Restoring” back to false and set the Restore button’s image to “Restore-Failed”, as the Restore was not successful.</text></attributes></behavior><behavior enabled="true" id="id438593" class="RuleBehavior"><attributes><text id="name">Restore Failed</text><text id="bundleName">Rule.behavior</text><real id="compoundConditionKind">0</real></attributes><conditions><condition pluginPredicateTypeIndex="0" id="id410975" eventType="mouse position"><attributes><index id="conditionType">3</index></attributes><predicate type="string"><attributes><text id="operator">is</text><text id="RHS">unpurchased</text></attributes></predicate><subjectPredicate type="string"><attributes><text id="operator">contains</text><text id="RHS"><expression><string xml:space="preserve">tableCellValue(</string><reference keypath="game.attributes.id505732"/><string xml:space="preserve">,1,5)</string></expression></text></attributes></subjectPredicate></condition></conditions><behaviors><behavior id="id722712" class="ChangeAttributeAction" enabled="true"><attributes><text id="name">Change Attribute</text><text id="bundleName">ChangeAttribute.behavior</text><text id="targetAttribute"></text><text id="RHS">false</text></attributes></behavior><behavior id="id100966" class="ChangeAttributeAction" enabled="true"><attributes><text id="name">Change Attribute</text><text id="bundleName">ChangeAttribute.behavior</text><text id="targetAttribute">self.attributes.image</text><text id="RHS">Restore-Failed</text></attributes></behavior></behaviors><elseBehaviors/></behavior></behaviors></behavior><behavior id="id880291" class="NoteBehavior" enabled="true"><attributes><text id="name">Note</text><text id="bundleName">Note.behavior</text><text id="note">It’s a little more difficult to gauge when a Restore attempt fails because a connection cannot be established, or the user presses Cancel. We cannot rely on the “game.Callback” attribute, since that may have been filled hours previously - and even if it wasn’t, the connection may have been lost in the small amount of time between then and now. If the user presses Cancel, no change is made to the PurchaseTable - it will remain blank in the relevant cell. If no connection can be made to Apple, it will remain blank in the relevant cell. 

All we can realistically do is to wait a specified interval and then check the cell again. If it’s still empty after this interval, we assume that the Restore has failed. In this case we’re waiting 30 seconds. You may want to set it to less - 30 seconds can feel like a very long time when staring at an unchanging screen. If, after this period, the Restore *does* successfully happen, and the cell gets changed to “purchased”, logic elsewhere in the actor will take care of making the necessary changes. If the cell changes to “unpurchased”, this is the same outcome anyway so it doesn’t matter. 🔚</text></attributes></behavior><behavior id="id639048" class="TimerBehavior" enabled="true"><attributes><text id="name">Wait until a restore should have happened</text><text id="bundleName">Timer.behavior</text><index id="timerType">1</index><real id="interval">30</real><boolean id="runToCompletion">true</boolean></attributes><behaviors><behavior enabled="true" id="id723267" class="RuleBehavior"><attributes><text id="name">Restore Failed</text><text id="bundleName">Rule.behavior</text><real id="compoundConditionKind">0</real></attributes><conditions><condition pluginPredicateTypeIndex="0" id="id410975" eventType="mouse position"><attributes><index id="conditionType">3</index></attributes><predicate type="string"><attributes><text id="operator">is</text><text id="RHS"></text></attributes></predicate><subjectPredicate type="string"><attributes><text id="operator">contains</text><text id="RHS"><expression><string xml:space="preserve">tableCellValue(</string><reference keypath="game.attributes.id505732"/><string xml:space="preserve">,1,5)</string></expression></text></attributes></subjectPredicate></condition></conditions><behaviors><behavior id="id722712" class="ChangeAttributeAction" enabled="true"><attributes><text id="name">Change Attribute</text><text id="bundleName">ChangeAttribute.behavior</text><text id="targetAttribute"></text><text id="RHS">false</text></attributes></behavior><behavior id="id100966" class="ChangeAttributeAction" enabled="true"><attributes><text id="name">Change Attribute</text><text id="bundleName">ChangeAttribute.behavior</text><text id="targetAttribute">self.attributes.image</text><text id="RHS">Restore-Failed</text></attributes></behavior></behaviors><elseBehaviors/></behavior></behaviors></behavior></behaviors><elseBehaviors/></behavior></behaviors><elseBehaviors/></behavior></behaviors></behavior><behavior enabled="true" id="id907385" class="RuleBehavior"><attributes><text id="name">Table filled - Failure</text><text id="bundleName">Rule.behavior</text><real id="compoundConditionKind">0</real></attributes><conditions><condition id="id536321" eventType="mouse position" pluginPredicateTypeIndex="0"><attributes><index id="conditionType">1</index><text id="subjectAttribute">game.attributes.id450160</text></attributes></condition></conditions><behaviors><behavior id="id314898" class="ChangeAttributeAction" enabled="true"><attributes><text id="name">Change Attribute</text><text id="bundleName">ChangeAttribute.behavior</text><text id="targetAttribute">self.attributes.image</text><text id="RHS">Restore-Connect</text></attributes></behavior><behavior id="id915036" class="ChangeAttributeAction" enabled="true"><attributes><text id="name">Change Attribute</text><text id="bundleName">ChangeAttribute.behavior</text><text id="targetAttribute"></text><text id="RHS">false</text></attributes></behavior><behavior id="id816026" class="NoteBehavior" enabled="true"><attributes><text id="name">Note</text><text id="bundleName">Note.behavior</text><text id="note">The only change here is that we don’t need the timer triggering repeated attempts to fill the PurchaseTable - that’s being handled in the Buy button. 🔚</text></attributes></behavior></behaviors><elseBehaviors/></behavior><behavior id="id292714" class="CompoundBehavior" enabled="true"><attributes><text id="name">When Buying the Item</text><text id="bundleName">Group.behavior</text></attributes><behaviors><behavior id="id678478" class="NoteBehavior" enabled="true"><attributes><text id="name">Note</text><text id="bundleName">Note.behavior</text><text id="note">If we’re attempting to buy the item, “game.Buying” will be set to “true”, and we know we need to change the Restore button’s actor to “Restore-Wait”. 🔚</text></attributes></behavior><behavior enabled="true" id="id853861" class="RuleBehavior"><attributes><text id="name">When Buying the Item</text><text id="bundleName">Rule.behavior</text><real id="compoundConditionKind">1</real></attributes><conditions><condition id="id325489" eventType="mouse position" pluginPredicateTypeIndex="0"><attributes><index id="conditionType">1</index><text id="subjectAttribute">game.attributes.id322831</text></attributes></condition></conditions><behaviors><behavior id="id682778" class="ChangeAttributeAction" enabled="true"><attributes><text id="name">Change Attribute</text><text id="bundleName">ChangeAttribute.behavior</text><text id="targetAttribute">self.attributes.image</text><text id="RHS">Restore-Wait</text></attributes></behavior></behaviors><elseBehaviors/></behavior></behaviors></behavior><behavior enabled="true" id="id668643" class="RuleBehavior"><attributes><text id="name">Restore Succeeded</text><text id="bundleName">Rule.behavior</text><real id="compoundConditionKind">0</real></attributes><conditions><condition pluginPredicateTypeIndex="0" id="id410975" eventType="mouse position"><attributes><index id="conditionType">3</index></attributes><predicate type="string"><attributes><text id="operator">is</text><text id="RHS">purchased</text></attributes></predicate><subjectPredicate type="string"><attributes><text id="operator">contains</text><text id="RHS"><expression><string xml:space="preserve">tableCellValue(</string><reference keypath="game.attributes.id505732"/><string xml:space="preserve">,1,5)</string></expression></text></attributes></subjectPredicate></condition></conditions><behaviors><behavior id="id529535" class="NoteBehavior" enabled="true"><attributes><text id="name">Note</text><text id="bundleName">Note.behavior</text><text id="note">Just as in the Buy button, there is some logic we only need to run if it’s being triggered by the Restore button, rather than the Buy button. Again, this can be combined into the relevant rule in the Buy button, which will reduce the logic slightly and save a little bit of processing. 🔚</text></attributes></behavior><behavior enabled="true" id="id895967" class="RuleBehavior"><attributes><text id="name">When the user is Restoring, not Buying</text><text id="bundleName">Rule.behavior</text><real id="compoundConditionKind">0</real></attributes><conditions><condition id="id596501" eventType="mouse position" pluginPredicateTypeIndex="0"><attributes><index id="conditionType">1</index><text id="subjectAttribute">game.attributes.id536048</text></attributes></condition></conditions><behaviors><behavior id="id321453" class="ChangeAttributeAction" enabled="true"><attributes><text id="name">Change Attribute</text><text id="bundleName">ChangeAttribute.behavior</text><text id="targetAttribute"></text><text id="RHS">true</text></attributes></behavior><behavior id="id576714" class="SaveAttributeAction" enabled="true"><attributes><text id="name">Save Attribute</text><text id="bundleName">SaveAttribute.behavior</text><text id="targetAttribute"></text><text id="key">Item</text></attributes></behavior><behavior id="id442542" class="ChangeAttributeAction" enabled="true"><attributes><text id="name">Change Attribute</text><text id="bundleName">ChangeAttribute.behavior</text><text id="targetAttribute"></text><text id="RHS">false</text></attributes></behavior></behaviors><elseBehaviors/></behavior></behaviors><elseBehaviors/></behavior><behavior enabled="true" id="id397525" class="RuleBehavior"><attributes><text id="name">When the IAP has been purchased and the game attribute changed</text><text id="bundleName">Rule.behavior</text><real id="compoundConditionKind">0</real></attributes><conditions><condition id="id989636" eventType="mouse position" pluginPredicateTypeIndex="0"><attributes><index id="conditionType">1</index><text id="subjectAttribute">game.attributes.id388026</text></attributes></condition></conditions><behaviors><behavior id="id875635" class="ChangeAttributeAction" enabled="true"><attributes><text id="name">Change Attribute</text><text id="bundleName">ChangeAttribute.behavior</text><text id="targetAttribute">self.attributes.image</text><text id="RHS">Restore-Disabled</text></attributes></behavior></behaviors><elseBehaviors/></behavior><behavior enabled="true" id="id462288" class="RuleBehavior"><attributes><text id="name">Re-enable button when usable</text><text id="bundleName">Rule.behavior</text><real id="compoundConditionKind">0</real></attributes><conditions><condition id="id223388" eventType="mouse position" pluginPredicateTypeIndex="0"><attributes><index id="conditionType">1</index><text id="subjectAttribute">game.attributes.id322831</text></attributes></condition><condition id="id468381" eventType="mouse position" pluginPredicateTypeIndex="0"><attributes><index id="conditionType">1</index><text id="subjectAttribute">game.attributes.id536048</text></attributes></condition><condition id="id387005" eventType="mouse position" pluginPredicateTypeIndex="0"><attributes><index id="conditionType">1</index><text id="subjectAttribute">game.attributes.id450160</text></attributes></condition><condition id="id989636" eventType="mouse position" pluginPredicateTypeIndex="0"><attributes><index id="conditionType">1</index><text id="subjectAttribute">game.attributes.id388026</text></attributes></condition><condition id="id116193" pluginPredicateTypeIndex="0" eventType="mouse position"><attributes><index id="conditionType">1</index><text id="subjectAttribute">self.attributes.image</text></attributes><predicate type="string"><attributes><text id="operator">isNot</text><text id="RHS">Restore-Failed</text></attributes></predicate></condition></conditions><behaviors><behavior id="id180195" class="ChangeAttributeAction" enabled="true"><attributes><text id="name">Change Attribute</text><text id="bundleName">ChangeAttribute.behavior</text><text id="targetAttribute">self.attributes.image</text><text id="RHS">Restore</text></attributes></behavior></behaviors><elseBehaviors/></behavior><behavior enabled="true" id="id313436" class="RuleBehavior"><attributes><text id="name">Reset button image after a failure</text><text id="bundleName">Rule.behavior</text><real id="compoundConditionKind">0</real></attributes><conditions><condition id="id389874" pluginPredicateTypeIndex="0" eventType="mouse position"><attributes><index id="conditionType">1</index><text id="subjectAttribute">self.attributes.image</text></attributes><predicate type="string"><attributes><text id="operator">is</text><text id="RHS">Restore-Failed</text></attributes></predicate></condition></conditions><behaviors><behavior id="id886658" class="TimerBehavior" enabled="true"><attributes><text id="name">Timer</text><text id="bundleName">Timer.behavior</text><index id="timerType">1</index><real id="interval">3</real><boolean id="runToCompletion">false</boolean></attributes><behaviors><behavior id="id686868" class="ChangeAttributeAction" enabled="true"><attributes><text id="name">Change Attribute</text><text id="bundleName">ChangeAttribute.behavior</text><text id="targetAttribute">self.attributes.image</text><text id="RHS">Restore</text></attributes></behavior></behaviors></behavior></behaviors><elseBehaviors/></behavior></behaviors><aspects><graphics><attributes><boolean id="visible">true</boolean><enumeration id="blendingMode">0</enumeration><enumeration id="horizontalWrap">0</enumeration><enumeration id="verticalWrap">0</enumeration><enumeration id="horizontalAnchor">0</enumeration><enumeration id="verticalAnchor">0</enumeration><boolean id="flipHorizontally">false</boolean><boolean id="flipVertically">false</boolean><integer id="tileWidth">256</integer><integer id="tileHeight">76</integer></attributes></graphics><motion><attributes><point id="linearVelocity"><real id="x">0</real><real id="y">0</real></point><real id="angularVelocity">0</real><real id="maxSpeed">0</real><boolean id="applyMaxSpeed">false</boolean></attributes></motion><physics><attributes><real id="density">1</real><real id="friction">3</real><real id="restitution">1</real><boolean id="fixedRotation">false</boolean><boolean id="movable">true</boolean><enumeration id="collisionShape">0</enumeration><real id="drag">0</real><real id="angularDrag">0</real></attributes></physics></aspects></actor>
